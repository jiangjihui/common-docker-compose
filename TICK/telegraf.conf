[[outputs.influxdb]]
urls = ["http://192.168.1.103:8086"]
database = "telegraf"
retention_policy = ""
write_consistency = "any"
timeout = "5s"
insecure_skip_verify = false

[[inputs.docker]]
endpoint = "unix:///var/run/docker.sock"
gather_services = true
container_name_include = []
container_name_exclude = []
timeout = "5s"
perdevice = true
total = false
tag_env = ["JAVA_HOME", "HEAP_SIZE"]
docker_label_include = []
docker_label_exclude = []

[[inputs.mysql]]
# 采集频率
interval = "5s"
servers = ["username:password@tcp(192.168.1.103:3306)/?tls=false"]
perf_events_statements_digest_text_limit  = 120
perf_events_statements_limit              = 250
perf_events_statements_time_limit         = 86400
table_schema_databases                    = [""]
gather_table_schema                       = false
gather_process_list                       = true
gather_info_schema_auto_inc               = true
gather_slave_status                       = true
gather_binary_logs                        = false
gather_table_io_waits                     = false
gather_table_lock_waits                   = false
gather_index_io_waits                     = false
gather_event_waits                        = false
gather_file_events_stats                  = false
interval_slow                             = "30m"

[[inputs.mqtt_consumer]]
servers = ["tcp://192.168.1.103:1883"]
qos = 0
connection_timeout = "30s"
topics = ["single","sensors/#"]
persistent_session = false
client_id = ""
username = "admin"
password = "admin"

[[inputs.cpu]]
  interval = "60s"
  percpu = true
  totalcpu = true
  fielddrop = ["time*"]
# Read metrics about disk usage by mount point
[[inputs.disk]]
  interval = "60s"
  # mount_points = ["/"]
  ignore_fs = ["tmpfs", "devtmpfs"]
# Read metrics about disk IO by device
[[inputs.diskio]]
  interval = "60s"
# Get kernel statistics from /proc/stat
[[inputs.kernel]]
  interval = "10m"
# Read metrics about memory usage
[[inputs.mem]]
  interval = "60s"
# Get the number of processes and group them by status
[[inputs.processes]]
  interval = "60s"
  fielddrop = ["wait","idle","unknown"]
# Read metrics about swap memory usage
[[inputs.swap]]
  interval = "60s"
  fieldpass = ["used_percent"]
# Read metrics about system load & uptime
[[inputs.system]]
  interval = "60s"
# # Read metrics about network interface usage
 [[inputs.net]]
  interval = "60s"
  fieldpass = ["packets_*","bytes_*","drop_*","err_*"]
# # Read TCP metrics such as established, time wait and sockets counts.
 [[inputs.netstat]]
 interval = "60s"
 fielddrop = ["tcp_none","tcp_closing","tcp_close*"]
# # Read ping metrics
[[inputs.ping]]
 urls = ["www.baidu.com"]
 count = 1
 ping_interval = 0.0
 timeout = 0.0
 interface = "eth0"